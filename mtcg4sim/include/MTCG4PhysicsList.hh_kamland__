//
// MTCG4PhysicsList.hh by Mich 100223
//
#ifndef MTCG4_PHYSICS_LIST_HH
#define MTCG4_PHYSICS_LIST_HH 1

#include "globals.hh"
#include "G4VUserPhysicsList.hh"
#include "G4VModularPhysicsList.hh"

class MTCG4PhysicsMessenger;

class G4Cerenkov;
class G4Scintillation;
class G4OpAbsorption;
class G4OpRayleigh;
class G4OpMieHG;
class G4OpBoundaryProcess;
class G4Decay;

class MTCG4PhysicsList: public G4VUserPhysicsList
{
public:
	MTCG4PhysicsList();
	~MTCG4PhysicsList();

public:
	virtual void ConstructParticle();
	virtual void ConstructProcess();
	virtual void SetCuts();

	//
	// Construct particles.
	// Currently not used.
	//
	//void ConstructBosons();
	//void ConstructLeptons();
	//void ConstructMesons();
	//void ConstructBaryons();

	//	
	// Construct physics processes and register them.
	//
	void AddParameterisation();
	void ConstructDecay();
	void ConstructHadronic();
	void ConstructEM();
	void ConstructOp();
	//void ConstructHadronElasticProcess();

	//
	// Methods called by physics messenger.
	//
	void SetVerbose(G4int);
	void SetNbOfPhotonsCerenkov(G4int);
	void SetCerenkovProduction(G4bool value)
	{ cerenkovIsTurnedOn = value; }
	inline G4bool GetCerenkovProduction()
	{ return cerenkovIsTurnedOn; }
	void SetScintillationProduction(G4bool value)
	{ scintillationIsTurnedOn = value; }
	inline G4bool GetScintillationProduction()
	{ return scintillationIsTurnedOn; }
	void SetNeutronHPThermalScattering(G4bool value)
	{	neutronHPThermalScatteringIsTurnedOn = value; }
	inline G4bool GetNeutronHPThermalScattering()
	{ return neutronHPThermalScatteringIsTurnedOn; }

private:
	//
	// Parameters for the physics messenger.
	//
	G4bool cerenkovIsTurnedOn;
	G4bool scintillationIsTurnedOn;
	G4bool neutronHPThermalScatteringIsTurnedOn;

	G4Cerenkov			*theCerenkovProcess;
	G4Scintillation     *theScintillationProcess;
	G4OpAbsorption      *theAbsorptionProcess;
	G4OpRayleigh        *theRayleighScatteringProcess;
	G4OpMieHG           *theMieHGScatteringProcess;
	G4OpBoundaryProcess *theBoundaryProcess;
	G4Decay				*theDecayProcess;

	MTCG4PhysicsMessenger *physicsMessenger;   
};

#endif
